<?xml version="1.0" encoding="utf-8" ?>
<views:BaseContentPage
    x:Class="Veganko.Views.ManageProductsPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:common="clr-namespace:Veganko.Common.Models.Products;assembly=Veganko.Common"
    xmlns:controls="clr-namespace:Veganko.Controls"
    xmlns:converters="clr-namespace:Veganko.Converters"
    xmlns:local="clr-namespace:Veganko"
    xmlns:models="clr-namespace:Veganko.Models"
    xmlns:partial="clr-namespace:Veganko.Views.Product.Partial"
    xmlns:user="clr-namespace:Veganko.Models.User"
    xmlns:views="clr-namespace:Veganko.Views"
    xmlns:vm="clr-namespace:Veganko.ViewModels">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:BoolInverter x:Key="BoolInverter" />
            <converters:UACConverter x:Key="UACConverter" />
            <converters:StringToEnumConverter x:Key="StringEnumConverter" />

            <DataTemplate x:Key="RemovableProductTemplate">
                <ViewCell>
                    <ViewCell.ContextActions>
                        <MenuItem
                            Clicked="OnDeleteProduct"
                            CommandParameter="{Binding .}"
                            IsDestructive="True"
                            Text="Delete" />
                    </ViewCell.ContextActions>
                    <partial:ProductView />
                </ViewCell>
            </DataTemplate>
            <DataTemplate x:Key="DefaultProductTemplate">
                <ViewCell>
                    <partial:ProductView />
                </ViewCell>
            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout Padding="10,0,10,10">
            <StackLayout>
                <StackLayout Margin="0,0,0,5" Orientation="Horizontal">
                    <StackLayout
                        Padding="5,0"
                        BackgroundColor="DarkKhaki"
                        HorizontalOptions="FillAndExpand"
                        Orientation="Horizontal">
                        <Entry
                            Completed="OnSearchTextInputCompleted"
                            HorizontalOptions="FillAndExpand"
                            Text="{Binding SearchText}"
                            TextColor="LightGray" />
                        <Button
                            BackgroundColor="Transparent"
                            Command="{Binding SearchClickedCommand}"
                            Image="ico_search.png"
                            VerticalOptions="Center" />
                    </StackLayout>
                </StackLayout>
                <StackLayout Orientation="Horizontal">
                    <!--<Button Command="{Binding SwitchFilteringOptions}" Image="icon.png" />-->
                    <StackLayout>
                        <ImageButton
                            BackgroundColor="Transparent"
                            HeightRequest="63"
                            HorizontalOptions="Center"
                            IsEnabled="False"
                            VerticalOptions="Center"
                            WidthRequest="63">
                            <ImageButton.Triggers>
                                <DataTrigger
                                    Binding="{Binding SelectedProductType}"
                                    TargetType="ImageButton"
                                    Value="{x:Static common:ProductType.NOT_SET}">
                                    <Setter Property="Source" Value="icon.png" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding SelectedProductType}"
                                    TargetType="ImageButton"
                                    Value="{x:Static common:ProductType.Hrana}">
                                    <Setter Property="Source" Value="ico_food.png" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding SelectedProductType}"
                                    TargetType="ImageButton"
                                    Value="{x:Static common:ProductType.Pijaca}">
                                    <Setter Property="Source" Value="ico_beverages.png" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding SelectedProductType}"
                                    TargetType="ImageButton"
                                    Value="{x:Static common:ProductType.Kozmetika}">
                                    <Setter Property="Source" Value="ico_cosmetics.png" />
                                </DataTrigger>
                            </ImageButton.Triggers>
                        </ImageButton>
                        <Picker SelectedItem="{Binding SelectedProductType, Converter={StaticResource StringEnumConverter}, Mode=TwoWay}">
                            <Picker.ItemsSource>
                                <x:Array Type="{x:Type x:String}">
                                    <x:String>NOT_SET</x:String>
                                    <x:String>Hrana</x:String>
                                    <x:String>Pijaca</x:String>
                                    <x:String>Kozmetika</x:String>
                                </x:Array>
                            </Picker.ItemsSource>
                        </Picker>
                    </StackLayout>
                    <controls:SelectableEnumImageView
                        x:TypeArguments="common:ProductClassifier"
                        ImageSource="{x:Static local:EnumImages.ProductClassifierImages}"
                        IsVisible="{Binding ShowProductClassifiers}"
                        VerticalOptions="Center"
                        ViewSize="63"
                        Source="{Binding ProductClassifiers}"
                        Selected="{Binding SelectedProductClassifiers}" />
                </StackLayout>
            </StackLayout>

            <ListView
                x:Name="ProductsListView"
                CachingStrategy="RecycleElement"
                HasUnevenRows="False"
                IsPullToRefreshEnabled="true"
                IsRefreshing="{Binding IsBusy, Mode=OneWay}"
                ItemSelected="OnProductSelected"
                ItemTemplate="{StaticResource RemovableProductTemplate}"
                ItemsSource="{Binding SearchResult}"
                RefreshCommand="{Binding LoadItemsCommand}"
                RowHeight="173"
                SeparatorVisibility="None"
                VerticalOptions="FillAndExpand" />
        </StackLayout>
    </ContentPage.Content>
</views:BaseContentPage>