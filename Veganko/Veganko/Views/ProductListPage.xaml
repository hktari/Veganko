<?xml version="1.0" encoding="utf-8" ?>
<views:BaseContentPage
    x:Class="Veganko.Views.ProductListPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:Veganko.Controls"
    xmlns:converters="clr-namespace:Veganko.Converters"
    xmlns:effects="clr-namespace:Veganko.Effects"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:local="clr-namespace:Veganko"
    xmlns:models="clr-namespace:Veganko.Models"
    xmlns:other="clr-namespace:Veganko.Other"
    xmlns:partial="clr-namespace:Veganko.Views.Product.Partial"
    xmlns:user="clr-namespace:Veganko.Models.User"
    xmlns:views="clr-namespace:Veganko.Views"
    xmlns:vm="clr-namespace:Veganko.ViewModels">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:BoolInverter x:Key="BoolInverter" />
            <converters:UACConverter x:Key="UACConverter" />
            <converters:StringToEnumConverter x:Key="StringEnumConverter" UseDescriptionAttribute="True" />

            <DataTemplate x:Key="RemovableProductTemplate">
                <ViewCell>
                    <ViewCell.ContextActions>
                        <MenuItem
                            Clicked="OnDeleteProduct"
                            CommandParameter="{Binding .}"
                            IsDestructive="True"
                            Text="Delete" />
                    </ViewCell.ContextActions>
                    <partial:ProductView />
                </ViewCell>
            </DataTemplate>
            <DataTemplate x:Key="DefaultProductTemplate">
                <ViewCell>
                    <partial:ProductView />
                </ViewCell>
            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid Padding="10,0,10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackLayout>
                <StackLayout Margin="0,5,0,5" Orientation="Horizontal">
                    <Frame Padding="3.75" HorizontalOptions="End">
                        <ImageButton
                            BackgroundColor="LightGray"
                            Command="{Binding SearchBarcodeCommand}"
                            HorizontalOptions="Start"
                            VerticalOptions="Center"
                            WidthRequest="40"
                            Source="barcode.png" />
                    </Frame>
                    <StackLayout
                        Padding="5,0"
                        HorizontalOptions="FillAndExpand"
                        Orientation="Horizontal"
                        Spacing="15">
                        <Frame HorizontalOptions="FillAndExpand" Style="{StaticResource EntryFrameStyle}">
                            <Entry
                                Completed="OnSearchTextInputCompleted"
                                FontFamily="{StaticResource VarelaRoundFont}"
                                IsSpellCheckEnabled="True"
                                IsTextPredictionEnabled="True"
                                Keyboard="Plain"
                                Text="{Binding SearchText}"
                                TextColor="Black">
                                <Entry.Effects>
                                    <effects:CustomEntryEffect />
                                </Entry.Effects>
                            </Entry>
                        </Frame>
                        <ContentView>
                            <OnPlatform x:TypeArguments="View">
                                <OnPlatform.Default>
                                    <ImageButton
                                        BackgroundColor="White"
                                        Command="{Binding SearchClickedCommand}"
                                        HeightRequest="40"
                                        HorizontalOptions="End"
                                        VerticalOptions="Center"
                                        Source="ico_search.png" />
                                </OnPlatform.Default>
                                <OnPlatform.iOS>
                                    <Image
                                        Aspect="AspectFit"
                                        BackgroundColor="White"
                                        HorizontalOptions="End"
                                        VerticalOptions="Center"
                                        WidthRequest="35"
                                        Source="ico_search.png">
                                        <Image.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding SearchClickedCommand}" />
                                        </Image.GestureRecognizers>
                                    </Image>
                                </OnPlatform.iOS>
                            </OnPlatform>
                        </ContentView>

                    </StackLayout>
                </StackLayout>
                <StackLayout Orientation="Vertical">
                    <ContentView x:Name="pickerRoot">
                        <ContentView.Content>
                            <OnPlatform>
                                <OnPlatform.Android>
                                    <controls:DroidProductTypeSpinner SelectedProductType="{Binding SelectedProductType, Mode=TwoWay}" />
                                </OnPlatform.Android>
                                <OnPlatform.Default>
                                    <StackLayout HeightRequest="50" Orientation="Horizontal">
                                        <Image HorizontalOptions="Center" VerticalOptions="Center">
                                            <Image.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SelectedProductType}"
                                                    TargetType="Image"
                                                    Value="{x:Static models:ProductType.NOT_SET}">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding SelectedProductType}"
                                                    TargetType="Image"
                                                    Value="{x:Static models:ProductType.Ostalo}">
                                                    <Setter Property="Source" Value="ico_help.png" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding SelectedProductType}"
                                                    TargetType="Image"
                                                    Value="{x:Static models:ProductType.Hrana}">
                                                    <Setter Property="Source" Value="ico_food.png" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding SelectedProductType}"
                                                    TargetType="Image"
                                                    Value="{x:Static models:ProductType.Pijaca}">
                                                    <Setter Property="Source" Value="ico_beverages.png" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding SelectedProductType}"
                                                    TargetType="Image"
                                                    Value="{x:Static models:ProductType.Kozmetika}">
                                                    <Setter Property="Source" Value="ico_cosmetics.png" />
                                                </DataTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Picker
                                            x:Name="productTypePicker"
                                            Grid.Column="1"
                                            ios:Picker.UpdateMode="WhenFinished"
                                            FontFamily="{StaticResource VarelaRoundFont}"
                                            HorizontalOptions="FillAndExpand"
                                            ItemsSource="{Binding ProductTypePickerItems}"
                                            SelectedItem="{Binding SelectedProductType, Converter={StaticResource StringEnumConverter}, Mode=TwoWay}" />
                                    </StackLayout>
                                </OnPlatform.Default>
                            </OnPlatform>
                        </ContentView.Content>
                    </ContentView>

                    <controls:SelectableEnumImageView
                        x:TypeArguments="models:ProductClassifier"
                        ImageSource="{x:Static local:EnumImages.ProductClassifierImages}"
                        VerticalOptions="Center"
                        ViewSize="50"
                        Source="{Binding ProductClassifiers}"
                        Selected="{Binding SelectedProductClassifiers}" />
                </StackLayout>
            </StackLayout>

            <ListView
                x:Name="ProductsListView"
                Grid.Row="1"
                CachingStrategy="RetainElement"
                HasUnevenRows="False"
                IsPullToRefreshEnabled="true"
                IsRefreshing="{Binding IsBusy, Mode=OneWay}"
                ItemSelected="OnProductSelected"
                ItemTemplate="{StaticResource DefaultProductTemplate}"
                ItemsSource="{Binding SearchResult}"
                RefreshCommand="{Binding LoadItemsCommand}"
                RowHeight="143"
                SeparatorVisibility="None"
                VerticalOptions="FillAndExpand">
                <ListView.Triggers>
                    <DataTrigger
                        Binding="{Binding UserRole, Converter={StaticResource UACConverter}, ConverterParameter={x:Static user:UserAccessRights.ProductsDelete}}"
                        TargetType="ListView"
                        Value="True">
                        <Setter Property="ItemTemplate" Value="{StaticResource RemovableProductTemplate}" />
                    </DataTrigger>
                </ListView.Triggers>
            </ListView>
        </Grid>
    </ContentPage.Content>
</views:BaseContentPage>